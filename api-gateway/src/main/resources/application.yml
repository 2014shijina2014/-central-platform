server:
  port: 9200
#  tomcat: 
#    accept-count: 1024
#    max-threads: 1024
#    max-connections: 2000
  undertow:
    io-threads: 16
    worker-threads: 256
    buffer-size: 1024
    buffers-per-region: 1024
    direct-buffers: true 


spring:
  application:
    name: auth-gateway
  datasource:
    druid: 
      # JDBC 配置(驱动类自动从url的mysql识别,数据源类型自动识别)
      url: jdbc:mysql://47.94.252.160:3306/oauth-center?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false 
      username: root
      password: root
      driver-class-name:  com.mysql.jdbc.Driver
      #连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
      initial-size: 1
      max-active: 20
      min-idle: 1
      # 配置获取连接等待超时的时间
      max-wait: 60000
      #打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 'x'
      test-on-borrow: false
      test-on-return: false 
      test-while-idle: true      
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      filters: stat,wall
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      #是否启用StatFilter默认值true
      web-stat-filter.enabled: true
      web-stat-filter.url-pattern:  /*
      web-stat-filter.exclusions: "*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*"
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.profile-enable: true
      # StatViewServlet配置
      #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
      #是否启用StatViewServlet默认值true
      stat-view-servlet.enabled: true
      #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
      #http://110.76.43.235:9000/druid/index.html
      #http://110.76.43.235:8080/mini-web/druid/index.html
      stat-view-servlet.url-pattern:  /druid/*
      #允许清空统计数据
      stat-view-servlet.reset-enable:  true
      stat-view-servlet.login-username: admin
      stat-view-servlet.login-password: admin
      #StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
      #deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
      #配置的格式
      #<IP>
      #或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
      #24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
      #stat-view-servlet.allow=
      #stat-view-servlet.deny=128.242.127.1/24,128.242.128.1
      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
      #aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
################### mysq end ##########################
  redis:
################### redis 单机版 start ########################## 
    host: 47.94.252.160
    port: 6379
    timeout: 3000
    database: 0
################### redis 单机版 end ##########################   
#   cluster:
#    nodes: 134.224.249.36:7000,134.224.249.37:7000,134.224.249.38:7000,134.224.249.36:7001,134.224.249.37:7001,134.224.249.38:7001
###        #130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
##        #192.168.3.157:7000,192.168.3.158:7000,192.168.3.159:7000,192.168.3.157:7001,192.168.3.158:7001,192.168.3.159:7001
#    timeout: 1000 # 连接超时时间（毫秒）
#    pool:
#      max-active: 2000  # 连接池最大连接数（使用负值表示没有限制）
#      max-idle: 500     # 连接池中的最大空闲连接
#      min-idle: 50     # 连接池中的最小空闲连接
#      max-wait: 1000   # 连接池最大阻塞等待时间（使用负值表示没有限制）      
    
docker:
  ipAddress: 47.94.252.160

mybatis:
  config-location: classpath:mybatis.cfg.xml
  mapper-locations: classpath*:com/central/**/dao/*.xml  


security:
  oauth2:
    token:
      store:
        type: redis


permit:
  http_urls:  /test163/** , /api-auth/** , /health ,/doc.html,/test111 ,/api-user/users-anon/login ,/user-center/users-anon/login,/document.html,**/v2/api-docs
  oauth_urls: /test163/** , /api-auth/** , /doc.html ,/test111 ,/api-user/users-anon/login,/user-center/users-anon/login,/document.html,**/v2/api-docs
  

 

#设置最大超时时间
ribbon:  
  httpclient:
    enabled: false
  okhttp:
    enabled: true  
  ReadTimeout: 90000  
  ConnectTimeout: 90000 


#设置最大容错超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 90000



#设置最大容错超时时间
hystrix:
  threadpool:
    default:
      coreSize: 100
      maximumSize: 5000
      allowMaximumSizeToDivergeFromCoreSize: true
      maxQueueSize: -1
  command:
    default:
      circuitBreaker:
        foreOpen: false
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 16000          
        

 
zuul:
  ribbon-isolation-strategy: thread       # 提高吞吐量
  threadPool:
    useSeparateThreadPools: true
    threadPoolKeyPrefix: api-gateway
  include:
    debug:
      header: true
  debug:
    request: true
    parameter: debugRequest
  retryable: false    #关闭重试
  sensitive-headers: #/oauth/token需要请求头处理
  add-host-header: true
  routes:
#    演示配置
#    baidu:  
#      path: /test163/**
#      url: http://47.94.252.160:9999
    auth:
      sensitiveHeaders: Access-Control-Allow-Origin,Access-Control-Allow-Methods
      path: /api-auth/**
      service-id: auth-server 
      strip-prefix: true   
      custom-sensitive-headers: true  #http://blog.didispace.com/spring-cloud-zuul-cookie-redirect/ zuul授权码跳转问题
    user:
      sensitiveHeaders: Access-Control-Allow-Origin,Access-Control-Allow-Methods
      path: /api-user/**
      service-id: user-center
      strip-prefix: true
      custom-sensitive-headers: true  #http://blog.didispace.com/spring-cloud-zuul-cookie-redirect/ zuul授权码跳转问题
    file:
      sensitiveHeaders: Access-Control-Allow-Origin,Access-Control-Allow-Methods
      path: /api-file/**
      service-id: file-center  
      strip-prefix: true
    sms:
      sensitiveHeaders: Access-Control-Allow-Origin,Access-Control-Allow-Methods
      path: /api-sms/**
      service-id: sms-center  
      strip-prefix: true
  ssl-hostname-validation-enabled: false



#swagger:
#  butler:
#    api-docs-path:  /v2/api-docs
#  swagger-version: 2.0  
#  resources:
#    auth:
#      name: auth-server
#      api-docs-path: /auth/v2/api-docs
#      swagger-version: 2.0
#    client:
#      name: eureka-client     
#      api-docs-path: /client/v2/api-docs 
#      swagger-version: 2.0      
#    auth_client:
#      name: auth-client
#      api-docs-path: /auth-client/v2/api-docs
#      swagger-version: 2.0     
   
swagger:
  butler:
    api-docs-path:  v2/api-docs
    auto-generate-from-zuul-routes: true
#  generate-routes: auth-server, auth-client 


   
eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:1111/eureka/
      #http://192.168.3.170:1111/eureka,http://192.168.3.171:1111/eureka,http://192.168.3.173:1111/eureka
      #http://130.75.131.243:1111/eureka/,http://130.75.131.244:1111/eureka/,http://130.75.131.245:1111/eureka/   
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
#    instance-id: ${spring.application.name}:${docker.ipAddress}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 5
    #注册实例文档
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}/swagger-ui.html # ${server.port}为该服务的端口号
#    status-page-url: http://${docker.ipAddress}:${server.port}/swagger-ui.html # ${server.port}为该服务的端口号
